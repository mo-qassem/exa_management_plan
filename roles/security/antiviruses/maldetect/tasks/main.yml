---
- name: Check if 'Maldet' service is active
  systemd:
    name: maldet.service
    state: started
  register: maldet_status
  ignore_errors: true

- name: Set fact if 'Maldet' service is running
  set_fact:
    maldet_installed: "{{ (maldet_status is defined)
      and (not maldet_status.failed | default(true))
      and (maldet_status.status is defined)
      and (maldet_status.status.ActiveState == 'active')
      }}"

- name: Print the result
  debug:
    msg: "Maldet service installed:  {{ maldet_installed }}"

- name: Download 'Maldet'
  get_url:
    url: https://www.rfxn.com/downloads/maldetect-current.tar.gz
    dest: /tmp/maldetect-current.tar.gz
  when: not maldet_installed

- name: Extract 'Maldet' tar.gz
  unarchive:
    src: /tmp/maldetect-current.tar.gz
    dest: /tmp/
    remote_src: yes
  when: not maldet_installed

- name: Find 'Maldet' extracted directory name
  find:
    paths: /tmp/
    patterns: "maldetect-*"
    file_type: directory
  register: maldetect_dir
  when: not maldet_installed

- name: Install 'Maldet'
  command: sudo bash install.sh
  args:
    chdir: "{{ maldetect_dir.files[0].path }}"
  when: not maldet_installed

- name: Update 'Maldet' configuration options
  become: true
  become_user: root
  lineinfile:
    path: /usr/local/maldetect/conf.maldet
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    backup: yes
  loop:
    - { regexp: "^#?email_alert=", line: 'email_alert="1"' }
    - { regexp: "^#?email_addr=", line: 'email_addr="cpanel@exaserve.com"' }

- name: Restart 'Maldet' using systemd
  become: true
  become_user: root
  service:
    name: maldet
    state: started
    enabled: yes
