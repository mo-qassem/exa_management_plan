---
- name: Get Opsview API Token
  uri:
    url: "{{ lookup('env', 'OPSVIEW_URL') }}/rest/login"
    method: POST
    headers:
      Content-Type: "application/json"
    body_format: json
    body:
      username: "{{ lookup('env', 'OPSVIEW_USERNAME') }}"
      password: "{{ lookup('env', 'OPSVIEW_PASSWORD') }}"
    validate_certs: false
  register: opsview_login

- name: Debug token
  debug:
    msg: "Token is {{ opsview_login.json.token }}"

- name: Check if host already exists in Opsview
  uri:
    url: "{{ lookup('env', 'OPSVIEW_URL') }}/rest/config/host/"
    method: GET
    headers:
      X-Opsview-Username: "{{ lookup('env', 'OPSVIEW_USERNAME') }}"
      X-Opsview-Token: "{{ opsview_login.json.token }}"
      Content-Type: "application/json"
    return_content: yes
    status_code: [200, 404]
    validate_certs: no
  register: opsview_host_check

- name: Find matching Opsview host
  set_fact:
    opsview_matching_host: >-
      {{
        (opsview_host_check.json.list | default([]) | selectattr('name', 'equalto', inventory_hostname) | list | first)
      }}
  when: (opsview_host_check.json.list | default([]) | selectattr('name', 'equalto', inventory_hostname) | list | length) > 0

- name: Set method and payload for Opsview host
  set_fact:
    opsview_api_method: "{{ 'PUT' if opsview_host_id is defined else 'POST' }}"
    opsview_api_payload: >-
      {{
        {
          "name": inventory_hostname,
          "alias": inventory_hostname,
          "ip": ansible_host,
          "check_command": {"name": "ping"},
          "check_period": {"name": "24x7"},
          "notification_period": {"name": "24x7"},
          "notifications_enabled": True,
          "notification_interval": "60",
          "hostgroup": {"name": "AWX"},
          "hosttemplates": [{"name": cpanel_installed | ternary('Shared Hosting - BOXS', 'VPS-Managed')}],
          "icon": {"name": "LOGO - Linux Penguin"},
          "monitored_by": {"name": "Master Monitoring Server"},
          "other_addresses": ""
        }
      }}

- name: Create or Update host in Opsview
  uri:
    url: >-
      {{
        (lookup('env', 'OPSVIEW_URL') + '/rest/config/host/' + opsview_host_id)
        if opsview_api_method == 'PUT'
        else (lookup('env', 'OPSVIEW_URL') + '/rest/config/host')
      }}
    method: "{{ opsview_api_method }}"
    headers:
      X-Opsview-Username: "{{ lookup('env', 'OPSVIEW_USERNAME') }}"
      X-Opsview-Token: "{{ opsview_login.json.token }}"
      Content-Type: "application/json"
    body_format: json
    body: "{{ opsview_api_payload }}"
    validate_certs: no

- name: Apply Opsview configuration (gen_config + restart)
  become: true
  ansible.builtin.shell: /usr/local/nagios/bin/rc.opsview gen_config
  run_once: true
  delegate_to: opsview_server
  args:
    warn: false
  register: opsview_gen_config
  failed_when: opsview_gen_config.rc != 0 and "'command not found'" not in opsview_gen_config.stderr
