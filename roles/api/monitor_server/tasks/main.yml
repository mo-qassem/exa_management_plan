---
- name: Get Opsview API Token
  uri:
    url: "{{ OPSVIEW_URL }}/rest/login"
    method: POST
    headers:
      Content-Type: "application/json"
    body_format: json
    body:
      username: "{{ OPSVIEW_USERNAME }}"
      password: "{{ OPSVIEW_PASSWORD }}"
    validate_certs: false
  register: opsview_login

- name: Debug token
  debug:
    msg: "Token is {{ opsview_login.json.token }}"

- name: Check if host already exists in Opsview
  uri:
    url: "{{ OPSVIEW_URL }}/rest/config/host/{{ ansible_host }}"
    method: GET
    headers:
      X-Opsview-Username: "{{ OPSVIEW_USERNAME }}"
      X-Opsview-Token: "{{ opsview_login.json.token }}"
      Content-Type: "application/json"
    return_content: yes
    status_code: [200, 404]
    validate_certs: no
  register: opsview_host_check

- name: Set method and payload for Opsview host
  set_fact:
    opsview_api_method: "{{ 'PUT' if opsview_host_check.status == 200 else 'POST' }}"
    opsview_api_payload:
      name: "{{ inventory_hostname }}"
      alias: "{{ inventory_hostname }}"
      ip: "{{ ansible_host }}"
      check_command: "check_host_15!-H $HOSTADDRESS$ -t 3 -w 500.0,80% -c 1000.0,100%"
      check_period: "24x7"
      notifications_enabled: true
      notification_interval: "60"
      notification_period: "24x7"
      notification_options: "u,d,r,f"
      hostgroup:
        name: "AWX"
      hosttemplates:
        - name: "Shared Hosting - BOXS"
      icon:
        name: "LOGO - Linux Penguin"
      monitored_by:
        name: "Master Monitoring Server"
      other_addresses: ""
  when: cpanel_installed

- name: Set method and payload for Opsview host
  set_fact:
    opsview_api_method: "{{ 'PUT' if opsview_host_check.status == 200 else 'POST' }}"
    opsview_api_payload:
      name: "{{ inventory_hostname }}"
      alias: "{{ inventory_hostname }}"
      ip: "{{ ansible_host }}"
      check_command:
        name: "ping"
      check_period:
        name: "24x7"
      notification_period:
        name: "24x7"
      notifications_enabled: true
      notification_interval: "60"
      notification_options:
        name: "u,d,r,f"
      hostgroup:
        name: "AWX"
      hosttemplates:
        - name: "VPS-Managed"
      icon:
        name: "LOGO - Linux Penguin"
      monitored_by:
        name: "Master Monitoring Server"
      other_addresses: ""
    when: not cpanel_installed

- name: Create or Update host in Opsview
  uri:
    url: >-
      {{
        'http://opsview.nileweb.com:3000/rest/config/host/' + inventory_hostname
        if opsview_api_method == 'PUT'
        else 'http://opsview.nileweb.com:3000/rest/config/host'
      }}
    method: "{{ opsview_api_method }}"
    headers:
      X-Opsview-Username: "{{ OPSVIEW_USERNAME }}"
      X-Opsview-Token: "{{ opsview_login.json.token }}"
      Content-Type: "application/json"
    body_format: json
    body: "{{ opsview_api_payload }}"
    validate_certs: no
  register: opsview_host_result

- name: Apply Opsview configuration (gen_config + restart)
  become: true
  ansible.builtin.shell: /usr/local/nagios/bin/rc.opsview gen_config
  run_once: true
  delegate_to: opsview_server
